{
    "contents" : "---\ntitle: \"machine_learning\"\nauthor: \"Emma Bunte\"\ndate: \"Monday, February 01, 2016\"\noutput: html_document\n---\n\n#Background\nAs described on the course site:\n\"Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset).\"\n\n# Problem Description\nAs described on the course site:\nThe goal of your project is to predict the manner in which they did the exercise. This is the \"classe\" variable in the training set. You may use any of the other variables to predict with. You should create a report describing how you built your model, how you used cross validation, what you think the expected out of sample error is, and why you made the choices you did. You will also use your prediction model to predict 20 different test cases.\"\n\n\n# Initialisation\nLoading the necessary libraries:\n```{r}\nlibrary(caret)\nlibrary(reshape2)\nlibrary(rpart)\nlibrary(randomForest)\n```\n\nSetting the seed:\n```{r}\nset.seed(54321)\n```\n\nLoading the data:\n```{r}\ntrainUrl <- \"http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\"\ntestUrl <- \"http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\"\ncsv_test <- read.csv(url(testUrl), na.strings=c(\"NA\",\"\"), header=TRUE)\ncsv_train <- read.csv(url(trainUrl), na.strings=c(\"NA\",\"\"), header=TRUE)\n```\n\n# Creating test and training set\nBefore we start creating our prediction, we partition our set into a training and a testing set.\n```{r}\n# create training set indexes with 60% of data\ninTrain <- createDataPartition(y=csv_train$classe,p=0.6, list=FALSE)\n# subset data to training\ntraining <- csv_train[inTrain,]\n# subset data (the rest) to test\ntesting <- csv_train[-inTrain,]\n```\n\n# Cleaning Data Set\nRemove the data that has near zero variance:\n```{r}\nnzv <- nearZeroVar(training, saveMetrics=TRUE)\ntraining <- training[,nzv$nzv==FALSE]\n```\n\nDelete columns with more than 60% missing data:\n```{r}\ntraining2 <- training\nfor(i in 1:length(training)) {\n    if( sum( is.na( training[, i] ) ) /nrow(training) >= .6) {\n        for(j in 1:length(training2)) {\n            if( length( grep(names(training[i]), names(training2)[j]) ) == 1)  {\n                training2 <- training2[ , -j]\n            }   \n        } \n    }\n}\ntraining<-training2\n```\n\nRemove columns that are unnecessary for predicting, like name and timestamp:\n```{r}\ntraining<-training[,-(1:5)]\n```\n\nRemove the same data from the test set:\n```{r}\nclean1 <- colnames(training)\nclean2 <- colnames(training[, -54]) # remove classe column\ntesting <- testing[clean1]\ncsv_test <- csv_test[clean2]\n```\n\n\n# Prediction with Trees \nFirst we fit the model:\n```{r}\nmodel_fit_rpart <- train(classe ~ ., data=training, method = \"rpart\")\n```\n\nThen we make the predictions on the test set we created:\n```{r}\npredictions_rpart <- predict(model_fit_rpart, newdata=testing)\n```\n\nThen we test the result using the confussion matrix\n```{r}\nconfusionMatrix(predictions_rpart, testing$classe)\n```\n\n# Prediction with Random Forests\nFirst we fit the random forests model:\n```{r}\nmodel_fit_rf <- randomForest(classe ~. , data=training)\n```\n\nThen we make the predictions on the test set we created:\n```{r}\npredictions_rf <- predict(model_fit_rf, testing, type = \"class\")\n```\n\nThen we test the result using the confussion matrix\n```{r}\nconfusionMatrix(predictions_rf, testing$classe)\n```\n\n# Model Selection\nThe accuracy of the trees is 56% and the accuracy of the random forests model is 99.66%. Both these accuracy are computed on the test set. Since the out of sample error of the random forests model is so good, we will use this model to make the predictions.\n\n# Predicting Results on the Test Data\nGenerating file for predictions on test set of the assignment:\n```{r}\npredictions_rf_test <- predict(model_fit_rf, csv_test, type = \"class\")\npredictions_rf_test\n```\n",
    "created" : 1454282066544.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3535470059",
    "id" : "524C46E7",
    "lastKnownWriteTime" : 1454282318,
    "path" : "~/0 Data Scientist/Cursussen/Data Scientist Specialization/8. Practical Machine Learning/Opdrachten/project/machine_learning.Rmd",
    "project_path" : "machine_learning.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}